---
import { getEntry } from "astro:content";
import BlogPostCard from "@/components/BlogPostCard.astro";
import PageHeading from "@/components/PageHeading.astro";
import Pagination from "@/components/Pagination.astro";
import blogConfig from "@/config/blog.json";
import Layout from "@/layouts/Layout.astro";
import { sortByDate } from "@/lib/utilities";
import { getSinglePage } from "@/lib/utilities/getSinglePage.astro";

const { page } = Astro.params;
// biome-ignore lint/style/noNonNullAssertion: <explanation>
const postIndex = (await getEntry("blog", "-index"))!;
const posts = await getSinglePage("blog");
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / blogConfig.postsPerPage);
const currentPage = page && !Number.isNaN(Number(page)) ? Number(page) : 1;
const indexOfLastPost = currentPage * blogConfig.postsPerPage;
const indexOfFirstPost = indexOfLastPost - blogConfig.postsPerPage;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);

export async function getStaticPaths() {
  const posts = await getSinglePage("blog");
  const totalPages = Math.ceil(posts.length / blogConfig.postsPerPage);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        page: (i + 1).toString(),
      },
    });
  }
  return paths;
}
---

<Layout title={postIndex.data.title} description={postIndex.data.description}>
  <PageHeading text={postIndex.data.title} />
  <section class="section">
    <div class="container">
      <div class="row gx-5">
        {
          currentPosts.map((post) => (
            <div class="mb-14 md:col-6">
              <BlogPostCard {...post} />
            </div>
          ))
        }
      </div>
      <Pagination
        section={"blog"}
        currentPage={currentPage}
        totalPages={totalPages}
      />
    </div>
  </section>
</Layout>
