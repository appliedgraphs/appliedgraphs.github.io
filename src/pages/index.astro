---
import ImageMod from "@/components/ImageMod.astro";
import content from "@/content/index.json";
import Layout from "@/layouts/Layout.astro";
import { markdownify } from "@/lib/utilities";

const { banner, sections } = content;
---

<Layout>
  <!-- Banner -->
  <section class="section pt-14">
    <div class="container">
      <div class="row justify-center">
        <div class="lg:col-7 md:col-9 mb-8 text-center">
          <h1
            set:html={markdownify(content.banner.title)}
            class="mb-4 text-h3 lg:text-h1"
          />
          <p set:html={markdownify(banner.content)} class="mb-8" />
          {
            banner.button.enable && (
              <a
                class="btn btn-primary"
                href={banner.button.link}
                target={
                  banner.button.link.startsWith("http") ? "_blank" : "_self"
                }
                rel="noopener"
              >
                {banner.button.label}
              </a>
            )
          }
        </div>
        {
          banner.image && (
            <div class="col-12">
              <ImageMod
                src={banner.image}
                height={380}
                width={1200}
                alt="banner"
                format="webp"
              />
            </div>
          )
        }
      </div>
    </div>
  </section>
  <!-- /Banner -->

  <!-- Sections -->
  {
    sections.map((section, sectionIndex: number) => (
      <section class={`section-sm ${sectionIndex % 2 === 0 && "bg-gradient"}`}>
        <div class="container">
          <div class="row items-center justify-between">
            <div
              class={`mb:md-0 mb-6 md:col-5 ${sectionIndex % 2 !== 0 && "md:order-2"}`}
            >
              <ImageMod
                src={section.image.src}
                height={480}
                width={520}
                alt={section.image.alt}
                format="webp"
              />
            </div>
            <div
              class={`md:col-7 lg:col-6 ${sectionIndex % 2 !== 0 && "md:order-1"}`}
            >
              {section.subsections.map((subsection) => (
                <div class="container">
                  <h2 set:html={markdownify(subsection.title)} class="mb-4" />
                  <p
                    set:html={markdownify(subsection.text)}
                    class="mb-8 text-lg"
                  />
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>
    ))
  }
</Layout>
