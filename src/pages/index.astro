---
import ImageMod from "@/components/ImageMod.astro";
import PageHeading from "@/components/PageHeading.astro";
import content from "@/content/index.json";
import Layout from "@/layouts/Layout.astro";
import { markdownify } from "@/lib/utilities";

const { heading, sections } = content;
---

<Layout title="">
  <PageHeading {...heading} />

  <!-- Sections -->
  {
    sections.map((section, sectionIndex: number) => (
      <section class={`section-sm ${sectionIndex % 2 === 0 && "bg-gradient"}`}>
        <div class="container">
          <div class="row items-center justify-between">
            <div
              class={`md:mb-0 mb-6 md:col-5 ${sectionIndex % 2 !== 0 && "md:order-2"}`}
            >
              <ImageMod
                src={section.image.src}
                height={400}
                width={400}
                alt={section.image.alt}
              />
            </div>
            <div
              class={`md:col-7 lg:col-6 ${sectionIndex % 2 !== 0 && "md:order-1"}`}
            >
              <div class="flex flex-col gap-4">
                {section.subsections.map((subsection, subsectionI) => (
                  <div class="container">
                    {subsection.heading && (
                      <h2
                        set:html={markdownify(subsection.heading)}
                        class={`mb-4 ${subsectionI > 0 ? "h4" : ""}`}
                      />
                    )}
                    <p
                      class="text-lg"
                      set:html={markdownify(subsection.text)}
                    />
                  </div>
                ))}
              </div>
              {section.button && (
                <div class="container flex flex-row justify-start">
                  <a
                    class="btn btn-lg btn-primary mt-8"
                    href={section.button.href}
                    target={
                      section.button.href.startsWith("http")
                        ? "_blank"
                        : "_self"
                    }
                    rel="noopener"
                  >
                    {section.button.text}
                  </a>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>
    ))
  }
</Layout>
